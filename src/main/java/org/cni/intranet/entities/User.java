package org.cni.intranet.entities;

// Generated 20 nov. 2014 12:28:53 by Hibernate Tools 4.0.0

import java.io.Serializable;
import java.util.Collection;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "users", schema = "public")
public class User implements Serializable {	
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private int userId;
	private Employee employee;
	private String userName;
	private String userPwd;
	private String dateCreation;
	private String dateLogin;
	private String userPicture;
	private Integer userStatus;
	private Collection<Employee> employees;
	private Collection<Structure> structures;
	private Collection<Role> roles;

	public User() {
		
	}

	public User(String userName, String userPwd, String dateCreation, 
			String dateLogin, String userPicture, Integer userStatus) {
		this.userName = userName;
		this.userPwd = userPwd;
		this.dateCreation = dateCreation;
		this.dateLogin = dateLogin;
		this.userPicture = userPicture;
		this.userStatus = userStatus;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "userId", unique = true, nullable = false)
	public int getUserId() {
		return this.userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "employeeId")
	public Employee getEmployee() {
		return this.employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	@Column(name = "userName", length = 254)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "userPwd", length = 254)
	public String getUserPwd() {
		return this.userPwd;
	}

	public void setUserPwd(String userPwd) {
		this.userPwd = userPwd;
	}

	@Column(name = "dateCreation", length = 254)
	public String getDateCreation() {
		return this.dateCreation;
	}

	public void setDateCreation(String dateCreation) {
		this.dateCreation = dateCreation;
	}

	@Column(name = "dateLogin", length = 254)
	public String getDateLogin() {
		return this.dateLogin;
	}

	public void setDateLogin(String dateLogin) {
		this.dateLogin = dateLogin;
	}

	@Column(name = "userPicture", length = 254)
	public String getUserPicture() {
		return this.userPicture;
	}

	public void setUserPicture(String userPicture) {
		this.userPicture = userPicture;
	}

	@Column(name = "userStatus")
	public Integer getUserStatus() {
		return this.userStatus;
	}

	public void setUserStatus(Integer userStatus) {
		this.userStatus = userStatus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Collection<Employee> getEmployees() {
		return this.employees;
	}

	public void setEmployees(Collection<Employee> employees) {
		this.employees = employees;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Collection<Structure> getStructures() {
		return this.structures;
	}

	public void setStructures(Collection<Structure> structures) {
		this.structures = structures;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "user_role", schema = "public", joinColumns = { @JoinColumn(name = "userId", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "roleId", nullable = false, updatable = false) })
	public Collection<Role> getRoles() {
		return this.roles;
	}

	public void setRoles(Collection<Role> roles) {
		this.roles = roles;
	}

}
