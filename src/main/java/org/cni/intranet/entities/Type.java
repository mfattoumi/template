package org.cni.intranet.entities;

// Generated 20 nov. 2014 12:28:53 by Hibernate Tools 4.0.0

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Store;

/**
 * Type generated by hbm2java
 */
@Entity
@Table(name = "type", schema = "public")
public class Type implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private int typeId;
	private Integer code;
	private String latinName;
	private String arabicName;
	private Collection<SubType> subTypes;

	public Type() {
	}

	public Type(int typeId) {
		this.typeId = typeId;
	}

	public Type(int typeId, Integer code, String latinName,
			String arabicName, List<SubType> subTypes) {
		this.typeId = typeId;
		this.code = code;
		this.latinName = latinName;
		this.arabicName = arabicName;
		this.subTypes = subTypes;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "typeId", unique = true, nullable = false)
	public int getTypeId() {
		return this.typeId;
	}

	public void setTypeId(int typeId) {
		this.typeId = typeId;
	}

	@Column(name = "code")
	public Integer getCode() {
		return this.code;
	}

	public void setCode(Integer code) {
		this.code = code;
	}

	@Column(name = "latinName")
	@Field(index=Index.YES, analyze=Analyze.YES, store=Store.YES)
	public String getLatinName() {
		return this.latinName;
	}

	public void setLatinName(String latinName) {
		this.latinName = latinName;
	}

	@Column(name = "arabicName")
	@Field(index=Index.YES, analyze=Analyze.YES, store=Store.YES)
	public String getArabicName() {
		return this.arabicName;
	}

	public void setArabicName(String arabicName) {
		this.arabicName = arabicName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "type")
	public Collection<SubType> getSubTypes() {
		return this.subTypes;
	}

	public void setSubTypes(Collection<SubType> subTypes) {
		this.subTypes = subTypes;
	}

}
